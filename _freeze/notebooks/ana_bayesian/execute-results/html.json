{
  "hash": "e3c170252185e1676616b5ef7326292b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model evaluation\"\nauthor: \"Kendra Wyant\"\ndate: \"2025-08-21\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n### Set Up Environment\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(source(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\"))\nsuppressPackageStartupMessages(library(tidyposterior))\n\npath_models_lag <- format_path(str_c(\"risk/models/lag\"))\npath_shared <- format_path(\"risk/data_processed/shared\")\npath_processed <- format_path(\"risk/data_processed/lag\")\n\noptions(knitr.kable.NA = '')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntest_metrics_0 <- read_csv(here::here(path_models_lag, \n                                      \"test_auroc_6_x_5_1day_0_v3_nested_strat_lh.csv\"), \n                              col_types = cols()) |> \n  select(outer_split_num, \"lag0\" = roc_auc)\n\ntest_metrics_24 <- read_csv(here::here(path_models_lag, \n                                       \"test_auroc_6_x_5_1day_24_v3_nested_strat_lh.csv\"),\n                             col_types = cols()) |> \n  select(outer_split_num, \"lag24\" = roc_auc)\n\ntest_metrics_72 <- read_csv(here::here(path_models_lag, \n                                       \"test_auroc_6_x_5_1day_72_v3_nested_strat_lh.csv\"),\n                              col_types = cols()) |> \n  select(outer_split_num, \"lag72\" = roc_auc)\n\ntest_metrics_168 <- read_csv(here::here(path_models_lag, \n                                        \"test_auroc_6_x_5_1day_168_v3_nested_strat_lh.csv\"), \n                              col_types = cols()) |> \n  select(outer_split_num, \"lag168\" = roc_auc)\n\ntest_metrics_336 <- read_csv(here::here(path_models_lag, \n                                       \"test_auroc_6_x_5_1day_336_v3_nested_strat_lh.csv\"),\n                             col_types = cols()) |> \n  select(outer_split_num, \"lag336\" = roc_auc)\n\ntest_metrics_all <- test_metrics_0 |> \n  left_join(test_metrics_24, by = c(\"outer_split_num\")) |> \n  left_join(test_metrics_72, by = c(\"outer_split_num\")) |>\n  left_join(test_metrics_168, by = c(\"outer_split_num\")) |>\n  left_join(test_metrics_336, by = c(\"outer_split_num\")) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30\nColumns: 7\n$ lag0       <dbl> 0.8989030, 0.9245294, 0.9297046, 0.9056895, 0.8849340, 0.91…\n$ lag24      <dbl> 0.8689003, 0.8988473, 0.9261899, 0.8778537, 0.8780250, 0.90…\n$ lag72      <dbl> 0.8358703, 0.8974821, 0.9275120, 0.8653247, 0.8754346, 0.89…\n$ lag168     <dbl> 0.8224227, 0.8695022, 0.9108843, 0.8673193, 0.8613850, 0.88…\n$ lag336     <dbl> 0.7534889, 0.8629033, 0.9062894, 0.8448594, 0.8349199, 0.85…\n$ fold_num   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1…\n$ repeat_num <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n```\n\n\n:::\n:::\n\n\n\n\n#### Model evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| output: false\n\n# Repeated CV (id = repeat, id2 = fold within repeat)\n# with a common variance:  statistic ~ model + (model | id2/id)\nset.seed(101)\npp <- test_metrics_all |> \n  rename(id = fold_num,\n         id2 = repeat_num) |> \n  perf_mod(formula = statistic ~ model + (1 | id2/id),\n         transform = tidyposterior::logit_trans,  # for skewed & bounded AUC\n         iter = 6000, chains = 4, adapt_delta = .9999, # increased iteration from 2000 to fix divergence issues\n         family = gaussian, \n)  \n```\n\n::: {.cell-output .cell-output-stdout .hidden}\n\n```\n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 7.7e-05 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.77 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 1: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 1: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 1: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 1: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 1: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 1: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 1: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 1: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 1: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 1: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 1: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 12.222 seconds (Warm-up)\nChain 1:                17.994 seconds (Sampling)\nChain 1:                30.216 seconds (Total)\nChain 1: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 2.8e-05 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.28 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 2: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 2: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 2: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 2: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 2: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 2: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 2: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 2: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 2: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 2: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 2: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 12.215 seconds (Warm-up)\nChain 2:                11.806 seconds (Sampling)\nChain 2:                24.021 seconds (Total)\nChain 2: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 5.8e-05 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.58 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 3: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 3: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 3: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 3: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 3: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 3: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 3: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 3: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 3: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 3: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 3: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 13.726 seconds (Warm-up)\nChain 3:                8.93 seconds (Sampling)\nChain 3:                22.656 seconds (Total)\nChain 3: \n\nSAMPLING FOR MODEL 'continuous' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 2.8e-05 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.28 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 4: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 4: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 4: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 4: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 4: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 4: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 4: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 4: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 4: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 4: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 4: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 13.308 seconds (Warm-up)\nChain 4:                17.882 seconds (Sampling)\nChain 4:                31.19 seconds (Total)\nChain 4: \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_tidy <- pp |> \n  tidy(seed = 123) \n\nq = c(.025, .5, .975)\npp_perf_tibble <- pp_tidy |> \n  group_by(model) |> \n  summarize(pp_median = quantile(posterior, probs = q[2]),\n            pp_lower = quantile(posterior, probs = q[1]), \n            pp_upper = quantile(posterior, probs = q[3])) |> \n  mutate(model = factor(model, levels = c(\"lag0\", \"lag24\", \"lag72\", \"lag168\", \"lag336\"),\n                        labels = c(\"0 lag\", \"24 lag\", \"72 lag\", \"168 lag\", \"336 lag\"))) |> \n  arrange(model)\n\npp_perf_tibble |> \n  write_csv(here::here(path_models_lag, \"pp_perf_tibble.csv\"))\n\npp_tidy |> \n  write_csv(here::here(path_models_lag, \"posteriors.csv\"))\n\npp_perf_tibble\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  model   pp_median pp_lower pp_upper\n  <fct>       <dbl>    <dbl>    <dbl>\n1 0 lag       0.912    0.899    0.924\n2 24 lag      0.891    0.876    0.905\n3 72 lag      0.882    0.866    0.897\n4 168 lag     0.870    0.852    0.886\n5 336 lag     0.850    0.829    0.868\n```\n\n\n:::\n:::\n\n\n\n\n\n### Model Comparisons\n\n#### Baseline Contrasts\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nci_baseline <- pp |>\n  contrast_models(list(\"lag24\", \"lag72\", \"lag168\", \"lag336\"), \n                  list(\"lag0\", \"lag0\", \"lag0\", \"lag0\")) |> \n  summary(size = 0) |> \n  mutate(contrast = factor(contrast, \n                           levels = c(\"lag24 vs lag0\", \"lag72 vs lag0\", \"lag168 vs lag0\", \n                                      \"lag336 vs lag0\"),\n                           labels = c(\"24 vs. 0\", \"72 vs. 0\", \n                                      \"168 vs. 0\", \"336 vs. 0\")),\n         probability = 1 - probability)\n\nci_median_baseline <- pp |> \n  contrast_models(list(\"lag24\", \"lag72\", \"lag168\", \"lag336\"), \n                  list(\"lag0\", \"lag0\", \"lag0\", \"lag0\")) |>  \n  group_by(contrast) |> \n  summarize(median = quantile(difference, .5)) |> \n  mutate(contrast = factor(contrast, \n                           levels = c(\"lag24 vs. lag0\", \"lag72 vs. lag0\", \"lag168 vs. lag0\", \n                                      \"lag336 vs. lag0\"),\n                           labels = c(\"24 vs. 0\", \"72 vs. 0\", \n                                      \"168 vs. 0\", \"336 vs. 0\")))\n\n\nci_baseline <- ci_baseline |> \n  left_join(ci_median_baseline, by = c(\"contrast\")) \n\nci_baseline |> \n  write_csv(here::here(path_models_lag, \"contrast_baseline.csv\"))\n\nci_baseline\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 10\n  contrast  probability    mean   lower   upper  size pract_neg pract_equiv\n  <fct>           <dbl>   <dbl>   <dbl>   <dbl> <dbl>     <dbl>       <dbl>\n1 168 vs. 0           1 -0.0424 -0.0483 -0.0369     0        NA          NA\n2 24 vs. 0            1 -0.0210 -0.0254 -0.0169     0        NA          NA\n3 336 vs. 0           1 -0.0626 -0.0701 -0.0556     0        NA          NA\n4 72 vs. 0            1 -0.0300 -0.0350 -0.0253     0        NA          NA\n# ℹ 2 more variables: pract_pos <dbl>, median <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n#### Adjacent Contrasts\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nci_lag <- pp |>\n  contrast_models(list(\"lag72\", \"lag168\", \"lag336\"), \n                  list(\"lag24\", \"lag72\", \"lag168\")) |> \n  summary(size = 0) |> \n  mutate(contrast = factor(contrast, \n                           levels = c(\"lag72 vs lag24\", \"lag168 vs lag72\", \n                                      \"lag336 vs lag168\"),\n                           labels = c(\"72 vs. 24\", \"168 vs. 72\", \"336 vs. 168\")),\n         probability = 1 - probability)\n\nci_median_lag <- pp |> \n  contrast_models(list(\"lag72\", \"lag168\", \"lag336\"), \n                  list(\"lag24\", \"lag72\", \"lag168\")) |> \n  group_by(contrast) |> \n  summarize(median = quantile(difference, .5)) |> \n  mutate(contrast = factor(contrast, \n                           levels = c(\"lag72 vs. lag24\", \"lag168 vs. lag72\", \n                                      \"lag336 vs. lag168\"),\n                           labels = c(\"72 vs. 24\", \"168 vs. 72\", \"336 vs. 168\")))\n\nci_lag <- ci_lag |> \n  left_join(ci_median_lag, by = c(\"contrast\")) |> \n  arrange(contrast)\n\nci_lag |> \n  write_csv(here::here(path_models_lag, \"contrast_adjacent.csv\"))\n\nci_lag\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 10\n  contrast    probability     mean   lower    upper  size pract_neg pract_equiv\n  <fct>             <dbl>    <dbl>   <dbl>    <dbl> <dbl>     <dbl>       <dbl>\n1 72 vs. 24          1.00 -0.00900 -0.0134 -0.00474     0        NA          NA\n2 168 vs. 72         1    -0.0124  -0.0172 -0.00762     0        NA          NA\n3 336 vs. 168        1    -0.0202  -0.0257 -0.0148      0        NA          NA\n# ℹ 2 more variables: pract_pos <dbl>, median <dbl>\n```\n\n\n:::\n:::\n",
    "supporting": [
      "ana_bayesian_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}