{
  "hash": "915529e5b139681a92b77cb88e5a9587",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Make All Figures for Main Manuscript\"\nauthor: \"Kendra Wyant\"\ndate: \"2025-06-20\"\nnumber-sections: true\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\n    toc: true\n    toc-depth: 4\neditor_options: \n  chunk_output_type: console\nexecute:\n  echo: false\nhtml-table-processing: none\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(source(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\"))\nsuppressPackageStartupMessages(library(tidyposterior))\nlibrary(kableExtra, exclude = \"group_rows\")\nlibrary(patchwork)\n\ntheme_set(theme_classic())\n\npath_models_lag <- format_path(str_c(\"risk/models/lag\"))\npath_shared <- format_path(\"risk/data_processed/shared\")\npath_processed <- format_path(\"risk/data_processed/lag\")\n```\n:::\n\n\n\nData for figures\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_tidy <- read_csv(here::here(path_models_lag, \"posteriors.csv\"), \n                                 show_col_types = FALSE) \n\nci <- read_csv(here::here(path_models_lag, \"pp_perf_tibble.csv\"), \n                                 show_col_types = FALSE) |> \n  mutate(model = factor(model, levels = c(\"0 lag\", \"24 lag\", \"72 lag\", \"168 lag\", \"336 lag\"),\n                        labels = c(\"No lag\", \"1 day\", \"3 days\", \"1 week\", \"2 weeks\")))\n\npreds_0 <- read_rds(here::here(path_models_lag, \n                               \"final_preds_kfold_1_x_5_1day_0_v3_strat_lh_final.rds\")) \npreds_24 <- read_rds(here::here(path_models_lag, \n                               \"final_preds_kfold_1_x_5_1day_24_v3_strat_lh_final.rds\")) \npreds_72 <- read_rds(here::here(path_models_lag, \n                               \"final_preds_kfold_1_x_5_1day_72_v3_strat_lh_final.rds\")) \npreds_168 <- read_rds(here::here(path_models_lag, \n                               \"final_preds_kfold_1_x_5_1day_168_v3_strat_lh_final.rds\")) \npreds_336 <- read_rds(here::here(path_models_lag, \n                               \"final_preds_kfold_1_x_5_1day_336_v3_strat_lh_final.rds\")) \n\n\nshap_grp_0 <- read_rds(here::here(path_models_lag, \n                      \"final_shapsgrp_kfold_1_x_5_1day_0_v3_strat_lh_final.rds\")) |> \n   filter(str_detect(variable_grp, \"EMA\")) |> \n   mutate(variable_grp = str_remove(variable_grp, \"\\\\(EMA item\\\\)\"))  \n\nshap_grp_336 <- read_rds(here::here(path_models_lag, \n                      \"final_shapsgrp_kfold_1_x_5_1day_336_v3_strat_lh_final.rds\")) |> \n   filter(str_detect(variable_grp, \"EMA\")) |> \n  mutate(variable_grp = str_remove(variable_grp, \"\\\\(EMA item\\\\)\"))  \n\nshap_global <- shap_grp_0 |> \n  mutate(model = \"No lag\") |> \n  bind_rows(shap_grp_336 |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"2 weeks\", \"No lag\" ))) |> \n  group_by(variable_grp, model) |> \n  summarize(mean_value = mean(abs(value)), .groups = \"drop\")\n\nshap_levels <- shap_global |>\n  mutate(variable_grp = reorder(variable_grp, mean_value, sum)) |>\n  pull(variable_grp) |>\n  levels()\n```\n:::\n\n\n\n\n## Figure 1: Prediction Methods\n\n\n::: {#cell-fig-method .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-method\n#| fig-cap: \"Panel A shows the prediction timepoints at which our model calculated a predicted probability of a lapse. All available data up until, but not including, the prediction timepoint was used to generate these predictions. Features were created for varying feature scoring epochs before the prediction timepoint (i.e., 12, 24, 48, 72, and 168 hours). Prediction timepoints were updated hourly. Panel B shows how the prediction window (i.e., window in which a lapse might occur) rolls forward hour-by-hour with the prediction timepoint. The prediction window width for all models was 24 hours. Additionally, there were five possible lag times between the prediction timepoint and start of the prediction window. A prediction window either started immediately after the prediction timepoint (no lag) or was lagged by 1 day, 3 days, 1 week, or 2 weeks.\"\n\nknitr::include_graphics(path = here::here(\"figures/methods.png\"), error = FALSE)\n```\n\n::: {.cell-output-display}\n![Panel A shows the prediction timepoints at which our model calculated a predicted probability of a lapse. All available data up until, but not including, the prediction timepoint was used to generate these predictions. Features were created for varying feature scoring epochs before the prediction timepoint (i.e., 12, 24, 48, 72, and 168 hours). Prediction timepoints were updated hourly. Panel B shows how the prediction window (i.e., window in which a lapse might occur) rolls forward hour-by-hour with the prediction timepoint. The prediction window width for all models was 24 hours. Additionally, there were five possible lag times between the prediction timepoint and start of the prediction window. A prediction window either started immediately after the prediction timepoint (no lag) or was lagged by 1 day, 3 days, 1 week, or 2 weeks.](../figures/methods.png){#fig-method width=331}\n:::\n:::\n\n\n\n\n\n## Figure 2: Posterior probabilities for auROC by model \n\n\n\n::: {#cell-fig-pp .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-pp\n#| fig-cap: \"Posterior probability distributions for area under ROC curve (auROC) for each model (no lag, 1-day, 3-day, 1-week, and 2-week lag). Each distribution reflects 8,000 posterior samples (4 chains × 2,000 samples) from a Bayesian hierarchical generalized linear model. Horizonatal lines depict 95% Bayesian credible intervals (CI) and vertical solid lines depict median posterior probability for auROC. Vertical dashed line represents expected performance from a random classifier (.5 auROC).\"\n#| fig-width: 6\n#| fig-height: 6\n\npp_tidy |> \n  mutate(model = factor(model, levels = c(\"lag0\", \"lag24\", \"lag72\", \"lag168\", \"lag336\"),\n                        labels = c(\"No lag\", \"1 day\", \"3 days\", \"1 week\", \"2 weeks\"))) |>\n  ggplot() + \n  geom_histogram(aes(x = posterior), fill = \"light grey\", color = \"black\", linewidth = .5,  \n                 bins = 60) +\n  geom_segment(mapping = aes(y = 3400, yend = 3800, x = pp_median, xend = pp_median),\n               linewidth = .5, data = ci) +\n  geom_segment(mapping = aes(y = 3600, yend = 3600, x = pp_lower, xend = pp_upper),\n                linewidth = .5, data = ci) +\n  facet_wrap(~model, ncol = 1) +\n  geom_vline(xintercept = .5, linewidth = .5, linetype = \"dashed\") +\n  scale_y_continuous(\"Posterior Samples\") +\n  xlab(\"Area Under ROC Curve\") +\n  expand_limits(x = c(.5, 1)) +\n  theme_classic() \n```\n\n::: {.cell-output-display}\n![Posterior probability distributions for area under ROC curve (auROC) for each model (no lag, 1-day, 3-day, 1-week, and 2-week lag). Each distribution reflects 8,000 posterior samples (4 chains × 2,000 samples) from a Bayesian hierarchical generalized linear model. Horizonatal lines depict 95% Bayesian credible intervals (CI) and vertical solid lines depict median posterior probability for auROC. Vertical dashed line represents expected performance from a random classifier (.5 auROC).](mak_figures_files/figure-html/fig-pp-1.png){#fig-pp width=576}\n:::\n:::\n\n\n\n## Figure 3: Calibrated Model Performance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbin_width = 0.10\n\npreds_all_raw <- preds_0 |> \n  mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |> \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"1 day\", \"3 days\", \"1 week\", \"2 weeks\")),\n         prob = \"Raw (uncalibrated)\")\n\npreds_all_beta <- preds_0 |> \n  mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |> \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"1 day\", \"3 days\", \"1 week\", \"2 weeks\")),\n         prob = \"Beta calibration\")\n\npreds_all_logi <- preds_0 |> \n  mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |> \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"1 day\", \"3 days\", \"1 week\", \"2 weeks\")),\n         prob = \"Logistic calibration\")\n\npreds_all <- preds_all_raw |> \n  bind_rows(preds_all_beta) |> \n  bind_rows(preds_all_logi) \n\nmini_hist <- preds_all_raw |>\n  count(bins, model) |> \n  bind_rows(tibble(bins = \"(0.9,1]\",\n                   model = \"2 weeks\",\n                   n = 0)) |> \n  group_by(model) |> \n  mutate(\n    bins = seq(1, 10, 1),\n    x = bin_width / 2 + bin_width * (bins - 1),       \n    y = n / max(n) * 0.07\n  ) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"2 weeks\"))) \n```\n:::\n\n::: {#cell-fig-cal .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-cal\n#| fig-cap: \"Calibration plots of raw and calibrated lapse probabilities for the baseline (no lag) and 2-week lag models. Predicted probabilities (x-axis) are binned into deciles. Observed lapse probability (y-axis) represents the proportion of actual lapses observed in each bin. The dashed diagonal represents perfect calibration. Points below the line indicate overestimation and points above the line indicate underestimation. Raw probabilities are depicted as solid black curve. Beta and logistic calibrated probabilites are depicted as green dashed curve and pink dotted curve, respectively. The grey histogram along the bottom of the plot represents the proportion of raw probabilities in each bin.\"\n#| fig-width: 6\n#| fig-height: 6\n\npreds_all |> \n  mutate(prob = factor(prob, levels = c(\"Raw (uncalibrated)\", \n                                        \"Beta calibration\", \n                                        \"Logistic calibration\"))) |> \n  group_by(bins, model, prob)  |> \n  summarize(mean_lapse = mean(lapse), .groups = \"drop\") |> \n  mutate(\n    bins = as.numeric(bins),\n    midpoints = bin_width/2 + bin_width * (bins - 1)\n  )  |> \n  ggplot(aes(x = midpoints, y = mean_lapse, group = prob,\n             color = prob, linetype = prob)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"longdash\", color = \"gray80\") +\n  geom_line(linewidth = .7) +\n  geom_rect(data = mini_hist, inherit.aes = FALSE,\n            aes(xmin = x - bin_width / 2,\n                xmax = x + bin_width / 2,\n                ymin = -y,\n                ymax = 0),\n            alpha = .4) +\n  facet_wrap(~ model, ncol = 2) +\n  labs(\n    x = \"Predicted Lapse Probability (Bin Midpoint)\",\n    y = \"Observed Lapse Probability\",\n    color = NULL,\n    linetype = NULL\n  ) +\n  scale_x_continuous(breaks = seq(0, 1, bin_width), limits = c(0, 1)) +\n  scale_y_continuous(limits = c(-0.08, 1), breaks = seq(0,1, bin_width),\n                     expand = c(0, 0)) +\n  coord_cartesian(clip = \"off\") +\n  scale_color_manual(values = c(\"black\", \"#458892\", \"#cb6bce\")) +\n  scale_linetype_manual(values = c(\"solid\", \"twodash\", \"dotted\")) +\n  theme_classic(base_size = 11) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(face = \"bold\", size = 11),\n    legend.title = element_text(face = \"bold\"),\n    legend.text = element_text(size = 10),\n    axis.text = element_text(size = 10),\n    axis.title = element_text(face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![Calibration plots of raw and calibrated lapse probabilities for the baseline (no lag) and 2-week lag models. Predicted probabilities (x-axis) are binned into deciles. Observed lapse probability (y-axis) represents the proportion of actual lapses observed in each bin. The dashed diagonal represents perfect calibration. Points below the line indicate overestimation and points above the line indicate underestimation. Raw probabilities are depicted as solid black curve. Beta and logistic calibrated probabilites are depicted as green dashed curve and pink dotted curve, respectively. The grey histogram along the bottom of the plot represents the proportion of raw probabilities in each bin.](mak_figures_files/figure-html/fig-cal-1.png){#fig-cal width=576}\n:::\n:::\n\n\n\n\n## Figure 4: Global and Local Shapley Plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglobal_panel <- shap_global |>\n  mutate(variable_grp = factor(variable_grp, levels = shap_levels)) |> \n  ggplot() +\n  geom_bar(aes(x = variable_grp, y = mean_value, fill = model), \n           stat = \"identity\", position = \"dodge\") +\n  labs(y = \"Mean(|Shapley Value|)\",\n       x = NULL,\n       fill = NULL) +\n  scale_fill_manual(values = c(\"#458892\", \"#751c6d\")) +\n  theme(axis.text=element_text(size=9.5),\n        legend.key.size = unit(0.25, \"cm\"),\n        panel.border = element_rect(colour = \"black\", fill = NA, linewidth = 1),\n        legend.position = \"right\") +\n  coord_flip()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nshap_grp_0_sum <- shap_grp_0 |> \n  group_by(variable_grp) |> \n  summarize(min = min(value), max = max(value)) |> \n  mutate(model = \"No lag\")\n\nshap_grp_336_sum <- shap_grp_336 |> \n  group_by(variable_grp) |> \n  summarize(min = min(value), max = max(value)) |> \n  mutate(model = \"2 weeks\")\n\npanel_shap_local <- shap_grp_0_sum |>\n  bind_rows(shap_grp_336_sum) |> \n  mutate(model = factor(model, levels = c(\"2 weeks\", \"No lag\"))) |> \n  mutate(variable_grp = factor(variable_grp, levels = shap_levels)) |> \n  ggplot() +\n  geom_segment(aes(x = variable_grp, y = min, yend = max, group = model,\n                   color = model),\n               position = position_dodge(width = .5), \n               linewidth = 1) +\n  ylab(\"Raw Shapley Value\") +\n  xlab(NULL) +\n  labs(color = NULL) +\n  scale_color_manual(values = c(\"#458892\", \"#751c6d\")) +\n  theme(legend.position = \"none\",\n        axis.text=element_text(size=9.5),\n        panel.border = element_rect(colour = \"black\", fill = NA, \n                                    linewidth = 1))+\n  geom_hline(aes(yintercept = 0), linetype = \"dashed\",\n             linewidth = .5) +\n  scale_y_continuous(limits = c(-2, 6), breaks = seq(-2, 6, 2)) +\n  coord_flip()\n```\n:::\n\n::: {#cell-fig-4 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-4\n#| fig-cap: \"Panel A displays the global importance (mean |Shapley value|) for feature categories for the no lag and 2-week lag models. Feature categories are ordered by their aggregate global importance. The importance of each feature category for each model is displayed separately by color. Panels B displays the variation in local feature importance for the no lag and 2-week lag models. Lines start at minimum Shapley value and end at maximum Shapley value.\"\n#| fig-width: 8\n#| fig-height: 5\n\nglobal_panel + panel_shap_local + \n  plot_layout(guides = \"collect\") &\n  plot_annotation(tag_levels = \"A\") \n```\n\n::: {.cell-output-display}\n![Panel A displays the global importance (mean |Shapley value|) for feature categories for the no lag and 2-week lag models. Feature categories are ordered by their aggregate global importance. The importance of each feature category for each model is displayed separately by color. Panels B displays the variation in local feature importance for the no lag and 2-week lag models. Lines start at minimum Shapley value and end at maximum Shapley value.](mak_figures_files/figure-html/fig-4-1.png){#fig-4 width=768}\n:::\n:::",
    "supporting": [
      "mak_figures_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}