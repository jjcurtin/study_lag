{
  "hash": "c2fe920db760b3c1d9b5b3e622f9ca77",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model calibration\"\nauthor: \"Kendra Wyant\"\ndate: \"2025-06-11\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n### Set Up Environment\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(source(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\"))\nsuppressPackageStartupMessages(library(tidymodels))\n\npath_models <- format_path(\"risk/models/lag\")\n\noptions(knitr.kable.NA = '')\n```\n:::\n\n\n\n\n### Read in best model predicitons\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npreds_0 <- read_rds(here::here(path_models, \"final_preds_kfold_1_x_5_1day_0_v3_strat_lh_final.rds\"))\npreds_336 <- read_rds(here::here(path_models, \"final_preds_kfold_1_x_5_1day_336_v3_strat_lh_final.rds\"))\n```\n:::\n\n\n\n\n### Plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbin_width = 0.10\n\npreds_all_raw <- preds_0 |> \n  mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |> \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\",  \"2 weeks\")))\n\npreds_all_logi <- preds_0 |> \n  mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |> \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\",  \"2 weeks\")))\n\npreds_all_beta <- preds_0 |> \n  mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |>  \n  bind_rows(preds_336 |> \n              mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"2 weeks\")))\n\npreds_all_iso <- preds_0 |> \n  mutate(prob_iso = if_else(prob_iso == 0, .0000000001, prob_iso)) |>  \n  mutate(bins = cut(prob_iso, breaks = seq(0, 1, bin_width)), \n         lapse = if_else(label == \"Lapse\", 1, 0)) |> \n  mutate(model = \"No lag\") |>  \n  bind_rows(preds_336 |> \n              mutate(prob_iso = if_else(prob_iso == 0, .0000000001, prob_iso)) |>  \n              mutate(bins = cut(prob_iso, breaks = seq(0, 1, bin_width)), \n                     lapse = if_else(label == \"Lapse\", 1, 0)) |> \n              mutate(model = \"2 weeks\")) |> \n  mutate(model = factor(model, levels = c(\"No lag\", \"2 weeks\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npreds_all_raw |> \n  group_by(bins, model)  |> \n  summarize(mean_lapse = mean(lapse),\n            .groups = \"drop\") |> \n  mutate(bins = as.numeric(bins),\n         midpoints = bin_width/2 + bin_width * (bins - 1))  |> \n  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dotted\") +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ model) +\n  labs(x = \"Predicted Lapse Probability (bin mid-point)\",\n       y = \"Observed Lapse Probability\",\n       title = \"Raw Probabilities\") +\n  scale_x_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) +\n  scale_y_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) \n```\n\n::: {.cell-output-display}\n![](ana_calibration_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npreds_all_iso |> \n  group_by(bins, model)  |> \n  summarize(mean_lapse = mean(lapse),\n            .groups = \"drop\") |>\n  mutate(bins = as.numeric(bins),\n         midpoints = bin_width/2 + bin_width * (bins - 1))  |> \n  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dotted\") +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ model) +\n  labs(x = \"Predicted Lapse Probability (bin mid-point)\",\n       y = \"Observed Lapse Probability\",\n       title = \"Iso Calibration\") +\n  scale_x_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) +\n  scale_y_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) \n```\n\n::: {.cell-output-display}\n![](ana_calibration_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npreds_all_logi |> \n  group_by(bins, model)  |> \n  summarize(mean_lapse = mean(lapse),\n            .groups = \"drop\") |> \n  mutate(bins = as.numeric(bins),\n         midpoints = bin_width/2 + bin_width * (bins - 1))  |> \n  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dotted\") +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ model) +\n  labs(x = \"Predicted Lapse Probability (bin mid-point)\",\n       y = \"Observed Lapse Probability\",\n       title = \"Logistic Calibration\") +\n  scale_x_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) +\n  scale_y_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) \n```\n\n::: {.cell-output-display}\n![](ana_calibration_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\npreds_all_beta |> \n  group_by(bins, model)  |> \n  summarize(mean_lapse = mean(lapse),\n            .groups = \"drop\") |> \n  mutate(bins = as.numeric(bins),\n         midpoints = bin_width/2 + bin_width * (bins - 1))  |> \n  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dotted\") +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ model) +\n  labs(x = \"Predicted Lapse Probability (bin mid-point)\",\n       y = \"Observed Lapse Probability\",\n       title = \"Beta Calibration\") +\n  scale_x_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) +\n  scale_y_continuous(breaks = seq(0, 1, bin_width),\n                     limits = c(0, 1)) \n```\n\n::: {.cell-output-display}\n![](ana_calibration_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n:::\n\n\n\n### Brier Scores\n\nBase rates of lapses\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmean(preds_336$label == \"Lapse\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07649943\n```\n\n\n:::\n:::\n\n\n\n\nRaw probabilities\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class(preds_0, truth = label, prob_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0705\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nbrier_class(preds_336, truth = label, prob_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0767\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(brier_class(preds_0, truth = label, prob_raw)$.estimate +\n  brier_class(preds_336, truth = label, prob_raw)$.estimate)/2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07359727\n```\n\n\n:::\n:::\n\n\n\nIso\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class(preds_0, truth = label, prob_iso)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0427\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nbrier_class(preds_336, truth = label, prob_iso)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0616\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(brier_class(preds_0, truth = label, prob_iso)$.estimate +\n  brier_class(preds_336, truth = label, prob_iso)$.estimate)/2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0521402\n```\n\n\n:::\n:::\n\n\n\nLogi\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class(preds_0, truth = label, prob_logi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0425\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nbrier_class(preds_336, truth = label, prob_logi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0627\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(brier_class(preds_0, truth = label, prob_logi)$.estimate +\n  brier_class(preds_336, truth = label, prob_logi)$.estimate)/2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05261502\n```\n\n\n:::\n:::\n\n\n\nBeta\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbrier_class(preds_0, truth = label, prob_beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0426\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nbrier_class(preds_336, truth = label, prob_beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 brier_class binary        0.0608\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(brier_class(preds_0, truth = label, prob_beta)$.estimate +\n  brier_class(preds_336, truth = label, prob_beta)$.estimate)/2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05171503\n```\n\n\n:::\n:::\n\n\n\n\nRelative improvement of beta calibration compared to raw\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n(brier_class(preds_0, truth = label, prob_raw)$.estimate - \n  brier_class(preds_0, truth = label, prob_beta)$.estimate) / \n  brier_class(preds_0, truth = label, prob_raw)$.estimate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3958183\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n(brier_class(preds_336, truth = label, prob_raw)$.estimate - \n  brier_class(preds_336, truth = label, prob_beta)$.estimate) / \n  brier_class(preds_336, truth = label, prob_raw)$.estimate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2067182\n```\n\n\n:::\n:::\n",
    "supporting": [
      "ana_calibration_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}