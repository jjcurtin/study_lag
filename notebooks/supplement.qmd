---
title: "Supplemental Material"
subtitle: "Lagged Predictions of Next Week Alcohol Use for Precision Mental Health Support"
author: "Kendra Wyant, Gaylen E. Fronk, Jiachen Yu, and John J. Curtin"
date: last-modified
number-sections: true
format: 
  html: 
    embed-resources: true
    toc: true 
    toc_depth: 5
execute:
  echo: false
editor_options: 
  chunk_output_type: console
---

This file contains the supplemental materials for *Lagged Predictions of Next Week Alcohol Use for Precision Mental Health Support*. It includes a transparency report and all supplemental figures and tables. Additional materials are made available on our study's OSF page ([https://osf.io/xta67/](https://osf.io/xta67/)).   

-----



```{r}
#| echo: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(source("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true"))
suppressPackageStartupMessages(library(tidyposterior))
suppressPackageStartupMessages(library(kableExtra))
library(patchwork)


theme_set(theme_classic())

options(knitr.kable.NA = '')

path_models_lag <- format_path(str_c("risk/models/lag"))
path_processed <- format_path(str_c("risk/data_processed/lag"))
```


```{r}
#| echo: false


pp_tidy <- read_csv(here::here(path_models_lag, "posteriors.csv"), 
                                 show_col_types = FALSE) 

ci <- read_csv(here::here(path_models_lag, "pp_perf_tibble.csv"), 
                                 show_col_types = FALSE) |> 
  mutate(model = factor(model, levels = c("0 lag", "24 lag", "72 lag", "168 lag", "336 lag"),
                        labels = c("No lag", "1 day", "3 days", "1 week", "2 weeks")))

pp_dem <- read_csv(here::here(path_models_lag, "pp_dem_all.csv"), 
                                 show_col_types = FALSE)

pp_dem_contrast <- read_csv(here::here(path_models_lag, "pp_dem_contrast_all.csv"), 
                                 show_col_types = FALSE) |> 
  mutate(lag = factor(lag, levels = c("0", "24", "72", "168", "336"),
                        labels = c("No lag", "1 day", "3 days", "1 week", "2 weeks")))

labels <- read_csv(here::here(path_processed, "labels_1day_0lag.csv"),
                   show_col_types = FALSE)

dem_tbl <- read_csv(here::here(path_processed, "dem_tibble.csv"),
                   show_col_types = FALSE)

labels_dem <- labels |> 
  left_join(dem_tbl, by = "subid")
```

## Transparency Report 1.0 (full, 36 items; Aczel et al., 2019)

**Manuscript Title:** Lagged Predictions of Next Week Alcohol Use for Precision Mental Health Support   
**Authors:** Kendra Wyant, Gaylen E. Fronk, Jiachen Yu, and John J. Curtin   
**Corresponding author’s email address:** jjcurtin@wisc.edu   
**Link to Project Repository:** [https://osf.io/xta67/](https://osf.io/xta67/)      

### Preregistration Section   
- Prior to analyzing the complete data set, a time-stamped preregistration was posted in an independent, third-party registry for the data analysis plan: Yes  

Comments about your Preregistration: We pre-registered our data analytic strategy on OSF.   

### Methods Section
The manuscript fully describes…    

- the rationale for the sample size used (e.g., an a priori power analysis): Yes  
- how participants were recruited: Yes  
- how participants were selected (e.g., eligibility criteria): Yes  
- what compensation was offered for participation: Yes  
- how participant dropout was handled (e.g., replaced, omitted, etc): Yes  
- how participants were assigned to conditions: N/A.  There are no conditions.  
- how stimulus materials were randomized: N/A.    
- whether (and, if so, how) participants, experimenters, and data-analysts were kept naive to potentially biasing information: N/A.  This is an observations study that does not include analysis of group or manipulations.   There were no study conditions to blind.   
- the study design, procedures, and materials to allow independent replication: Yes   
-	the measures of interest (e.g., friendliness): Yes   
-	all operationalizations for the measures of interest (e.g., a questionnaire measuring friendliness): Yes   

### Results and Discussion Section
The manuscript…  

-	distinguishes explicitly between “confirmatory” (i.e., prespecified) and “exploratory” (i.e., not prespecified) analyses: All analyses were pre-registered.
-	describes how violations of statistical assumptions were handled: No  
-	justifies all statistical choices (e.g., including or excluding covariates; applying or not applying transformations; use of multi-level models vs. ANOVA): Yes  
-	reports the sample size for each cell of the design: Yes  
-	reports how incomplete or missing data were handled: Yes  
-	presents protocols for data preprocessing (e.g., cleaning, discarding of cases and items, normalizing, smoothing, artifact correction): Yes  

### Data, Code, and Materials Availability Section
The following have been made publicly available…  

-	the (processed) data, on which the analyses of the manuscript were based: Yes   
-	all code and software (that is not copyright protected): Yes   
-	all instructions, stimuli, and test materials (that are not copyright protected): Yes   
-	Are the data properly archived (i.e., would a graduate student with relevant background knowledge be able to identify each variable and reproduce the analysis): Yes   
-	The manuscript includes a statement concerning the availability and location of all research items, including data, materials, and code relevant to the study: Yes   


\newpage


## Supplemental Figures

### Figure S1: Calibration Plots for Baseline and 2-Week Lag Models

```{r}
preds_0 <- read_rds(here::here(path_models_lag, 
                               "outer_preds_3_x_10_1day_0_v3_nested_main.rds"))

preds_336 <- read_rds(here::here(path_models_lag, 
                               "outer_preds_3_x_10_1day_336_v3_nested_main.rds"))
```

#### Logistic Calibration

```{r}
bin_width = 0.10

fig_cal_0 <- preds_0 |> 
  mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  group_by(bins)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "No Lag") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 


fig_cal_336 <- preds_336 |> 
  mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  group_by(bins)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "2-week Lag") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1))
```

```{r}
fig_cal_0 + fig_cal_336
```

#### No Calibration (raw probabilities)

```{r}
bin_width = 0.10

fig_cal_0 <- preds_0 |> 
  mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  group_by(bins)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "No Lag") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 


fig_cal_336 <- preds_336 |> 
  mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  group_by(bins)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "2-week Lag") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1))
```

```{r}
fig_cal_0 + fig_cal_336
```



### Figure S2: Global Shapley Plots for Baseline and 2-Week Lag Model by Demographic Group


```{r}
global_all <- read_rds(here::here(path_models_lag, "shap_global_all.rds")) |> 
   filter(str_detect(variable_grp, "EMA")) |> 
   mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
          variable_grp = reorder(variable_grp, mean_value, sum),
          model = factor(model, levels = c("0 lag", "336 lag"),
                         labels = c("No lag", "2 weeks")))

shap_levels <- global_all |>
  mutate(variable_grp = reorder(variable_grp, mean_value, sum)) |>
  pull(variable_grp) |>
  levels()
```

```{r}
feat <- read_csv(here::here(path_processed, 
                            "features_0lag_v3.csv"),
                 col_types = cols()) |> 
  select(label_num, subid, dttm_label, lapse, demo_age, demo_sex, 
         demo_income, demo_race) |> 
  arrange(label_num) 

shaps <- read_rds(here::here(path_models_lag, "outer_shapsgrp_1day_0_v3_nested_main.rds"))

global_feat_0 <- feat |> 
  rename(id_obs = label_num) |>
  right_join(shaps, by = c("id_obs")) 
```


```{r}
baseline_sex <- global_feat_0 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_sex == "Male", 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)")),
         model = "No Lag") |> 
  group_by(model, group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  facet_wrap(~model, strip.position = "left") +
  labs(title = "Sex at Birth",
       y = NULL,
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        legend.position = "none",
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
        strip.placement = "outside") +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```

```{r}
baseline_race <- global_feat_0 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_race == "White/Caucasian", 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)"))) |> 
  group_by(group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  labs(title = "Race/Ethnicity",
       y = "Mean(|Shapley Value|)",
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        axis.text.y = element_blank(),
        legend.position = "none",
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1)) +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```

```{r}
baseline_income <- global_feat_0 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_income >= 1560, 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)"))) |> 
  group_by(group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  labs(title = "Income",
       y = NULL,
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        axis.text.y = element_blank(),
        legend.position = "none",
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1)) +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```



```{r}
no_lag <- baseline_sex + baseline_race + baseline_income 
```



```{r}
feat_336 <- read_csv(here::here(path_processed, 
                            "features_336lag_v3.csv"),
                 col_types = cols()) |> 
  select(label_num, subid, dttm_label, lapse, demo_age, demo_sex, 
         demo_income, demo_race) |> 
  arrange(label_num) 

shaps_336 <- read_rds(here::here(path_models_lag, "outer_shapsgrp_1day_336_v3_nested_main.rds"))


global_feat_336 <- feat_336 |> 
  rename(id_obs = label_num) |>
  right_join(shaps_336, by = c("id_obs")) 
```



```{r}
twoweek_sex <- global_feat_336 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_sex == "Male", 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)")),
         model = "2-Week Lag") |> 
  group_by(model, group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  facet_wrap(~model, strip.position = "left") +
  labs(title = "Sex at Birth",
       y = NULL,
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
        strip.placement = "outside") +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```

```{r}
twoweek_race <- global_feat_336 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_race == "White/Caucasian", 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)"))) |> 
  group_by(group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  labs(title = "Race/Ethnicity",
       y = "Mean(|Shapley Value|)",
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        axis.text.y = element_blank(),
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1)) +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```

```{r}
twoweek_income <- global_feat_336 |> 
  filter(str_detect(variable_grp, "EMA")) |> 
  mutate(variable_grp = str_remove(variable_grp, "\\(EMA item\\)"),
         group = if_else(demo_income >= 1560, 
                         "advantaged group (non-Hispanic White, male, above poverty)",
                         "disadvantaged group (not White, female, below poverty)",
                         ),
         group = factor(group, levels = c("disadvantaged group (not White, female, below poverty)",
                                          "advantaged group (non-Hispanic White, male, above poverty)"))) |> 
  group_by(group, variable_grp) |> 
  summarize(mean_value = mean(abs(value)), .groups = "drop") |> 
  arrange(mean_value) |> 
  mutate(variable_grp = factor(variable_grp),
         variable_grp = fct_inorder(variable_grp)) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, group = group, 
                 fill = group),  
             stat = "identity", position = "dodge") +
  labs(title = "Income",
       y = NULL,
       x = NULL,
       color = NULL) +
  theme(axis.text=element_text(size=9.5),
        axis.text.y = element_blank(),
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1)) +
  scale_fill_manual(values = c("#cb6bce", "#240e31")) +
  coord_flip()
```


```{r}
twoweek_lag <- twoweek_sex + twoweek_race + twoweek_income  + 
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom", legend.direction = "vertical") 
```


```{r}
#| label: fig-dem
#| fig-cap: "Global importance (mean |Shapley value|) for feature categories for no lag and two week lag model by demographic group. The importance of each feature category for advantaged and disadvantaged demographic groups are displayed separately by color."
#| fig-height: 6
#| fig-width: 7

no_lag/twoweek_lag 

```



## Supplemental Tables


### Table S1: Demographic Contrasts for all Models

```{r}
#| label: tbl-fairness
#| tbl-cap: "This table reports the bayesian model contrasts for each demographic group comparison separately by model and contrast. The median value represents the difference in median area under the ROC curve (auROC) between the two groups. A negative value indicates lower auROC performance for the disadvantaged group (female, not White, income below poverty) compared to the advantaged group (male, White, income above poverty)."


pp_sex <- pp_dem_contrast |> 
  filter(contrast == "male vs female") |> 
   mutate(ci = str_c("[", round(lower, 3), ", ", round(upper, 3), "]"),
         median = as.character(round(median, 3)),
         probability = as.character(round(probability, 3))) |> 
  select(lag, median, ci, probability) |> 
  rename(`Lag`= lag,
         Median = median,
         `Bayesian CI` = ci,
         Probability = probability)

pp_income <- pp_dem_contrast |> 
  filter(contrast == "above poverty vs below poverty") |> 
   mutate(ci = str_c("[", round(lower, 3), ", ", round(upper, 3), "]"),
         median = as.character(round(median, 3)),
         probability = as.character(round(probability, 3))) |> 
  select(lag, median, ci, probability) |> 
  rename(`Lag`= lag,
         `Median ` = median,
         `Bayesian CI ` = ci,
         `Probability ` = probability)

pp_race <- pp_dem_contrast |> 
  filter(contrast == "non-hispanic white vs not white") |> 
   mutate(ci = str_c("[", round(lower, 3), ", ", round(upper, 3), "]"),
         median = as.character(round(median, 3)),
         probability = as.character(round(probability, 3))) |> 
  select(lag, median, ci, probability) |> 
  rename(`Lag`= lag,
         `Median  ` = median,
         `Bayesian CI  ` = ci,
         `Probability   ` = probability)

pp_sex |> 
  full_join(pp_income, by = "Lag") |> 
  full_join(pp_race, by = "Lag") |> 
  kbl() |> 
  add_header_above(c(" " = 1, "Race" = 3, "Sex" = 3, "Income" = 3))
```



### Table S2: Percentage of lapse Reports by Demographic Groups

```{r}
#| label: tbl-lapses
#| tbl-cap: "This table reports the percentage of lapse labels relative to all labels (lapse and no lapse combined) for each demographic group. We calculated percentages using labels created for the no lag baseline model."

labels_race <- labels_dem |> 
  janitor::tabyl(race_di, lapse) |> 
  janitor::adorn_percentages() |> 
  mutate(race_di = if_else(race_di == "not white", "not White", "non-Hispanic White")) |> 
  select(-no, `Demographic group` = race_di, `% lapses` = yes)

labels_income <- labels_dem |> 
  janitor::tabyl(income_di, lapse) |> 
  janitor::adorn_percentages() |> 
  select(-no, `Demographic group` = income_di, `% lapses` = yes)

labels_sex <- labels_dem |> 
  janitor::tabyl(dem_2, lapse) |> 
  janitor::adorn_percentages() |> 
  select(-no, `Demographic group` = dem_2, `% lapses` = yes)

labels_race |> 
  bind_rows(labels_income) |> 
  bind_rows(labels_sex) |> 
  kbl() |> 
  kableExtra::row_spec(2, extra_css = "border-bottom: 1px solid") |> 
  kableExtra::row_spec(4, extra_css = "border-bottom: 1px solid") 
```

