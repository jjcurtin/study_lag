---
title: "Model calibration"
author: "Kendra Wyant"
date: "`r lubridate::today()`"
output: 
  html_document:
    toc: true 
    toc_depth: 4
format:
  html:
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

### Set Up Environment

```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(source("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true"))
suppressPackageStartupMessages(library(tidymodels))

path_models <- format_path("risk/models/lag")

options(knitr.kable.NA = '')
```


### Read in best model predicitons
```{r}
preds_0 <- read_rds(here::here(path_models, "final_preds_kfold_1_x_5_1day_0_v3_strat_lh_final.rds"))
preds_336 <- read_rds(here::here(path_models, "final_preds_kfold_1_x_5_1day_336_v3_strat_lh_final.rds"))
```


### Plots

```{r}
bin_width = 0.10

preds_all_raw <- preds_0 |> 
  mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  mutate(model = "No lag") |> 
  bind_rows(preds_336 |> 
              mutate(bins = cut(prob_raw, breaks = seq(0, 1, bin_width)), 
                     lapse = if_else(label == "Lapse", 1, 0)) |> 
              mutate(model = "2 weeks")) |> 
  mutate(model = factor(model, levels = c("No lag",  "2 weeks")))

preds_all_logi <- preds_0 |> 
  mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  mutate(model = "No lag") |> 
  bind_rows(preds_336 |> 
              mutate(bins = cut(prob_logi, breaks = seq(0, 1, bin_width)), 
                     lapse = if_else(label == "Lapse", 1, 0)) |> 
              mutate(model = "2 weeks")) |> 
  mutate(model = factor(model, levels = c("No lag",  "2 weeks")))

preds_all_beta <- preds_0 |> 
  mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  mutate(model = "No lag") |>  
  bind_rows(preds_336 |> 
              mutate(bins = cut(prob_beta, breaks = seq(0, 1, bin_width)), 
                     lapse = if_else(label == "Lapse", 1, 0)) |> 
              mutate(model = "2 weeks")) |> 
  mutate(model = factor(model, levels = c("No lag", "2 weeks")))

preds_all_iso <- preds_0 |> 
  mutate(prob_iso = if_else(prob_iso == 0, .0000000001, prob_iso)) |>  
  mutate(bins = cut(prob_iso, breaks = seq(0, 1, bin_width)), 
         lapse = if_else(label == "Lapse", 1, 0)) |> 
  mutate(model = "No lag") |>  
  bind_rows(preds_336 |> 
              mutate(prob_iso = if_else(prob_iso == 0, .0000000001, prob_iso)) |>  
              mutate(bins = cut(prob_iso, breaks = seq(0, 1, bin_width)), 
                     lapse = if_else(label == "Lapse", 1, 0)) |> 
              mutate(model = "2 weeks")) |> 
  mutate(model = factor(model, levels = c("No lag", "2 weeks")))
```


```{r}
preds_all_raw |> 
  group_by(bins, model)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |> 
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  facet_wrap(~ model) +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "Raw Probabilities") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 

preds_all_iso |> 
  group_by(bins, model)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |>
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  facet_wrap(~ model) +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "Iso Calibration") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 

preds_all_logi |> 
  group_by(bins, model)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |> 
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  facet_wrap(~ model) +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "Logistic Calibration") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 

preds_all_beta |> 
  group_by(bins, model)  |> 
  summarize(mean_lapse = mean(lapse),
            .groups = "drop") |> 
  mutate(bins = as.numeric(bins),
         midpoints = bin_width/2 + bin_width * (bins - 1))  |> 
  ggplot(data = _, aes(x = midpoints, y = mean_lapse)) +
  geom_abline(slope = 1, intercept = 0, linetype = "dotted") +
  geom_line() +
  geom_point() +
  facet_wrap(~ model) +
  labs(x = "Predicted Lapse Probability (bin mid-point)",
       y = "Observed Lapse Probability",
       title = "Beta Calibration") +
  scale_x_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) +
  scale_y_continuous(breaks = seq(0, 1, bin_width),
                     limits = c(0, 1)) 
```

### Brier Scores

Base rates of lapses
```{r}
mean(preds_336$label == "Lapse") 
```


Raw probabilities
```{r}
brier_class(preds_0, truth = label, prob_raw)
brier_class(preds_336, truth = label, prob_raw)

(brier_class(preds_0, truth = label, prob_raw)$.estimate +
  brier_class(preds_336, truth = label, prob_raw)$.estimate)/2
```

Iso
```{r}
brier_class(preds_0, truth = label, prob_iso)
brier_class(preds_336, truth = label, prob_iso)

(brier_class(preds_0, truth = label, prob_iso)$.estimate +
  brier_class(preds_336, truth = label, prob_iso)$.estimate)/2
```

Logi
```{r}
brier_class(preds_0, truth = label, prob_logi)
brier_class(preds_336, truth = label, prob_logi)

(brier_class(preds_0, truth = label, prob_logi)$.estimate +
  brier_class(preds_336, truth = label, prob_logi)$.estimate)/2
```

Beta
```{r}
brier_class(preds_0, truth = label, prob_beta)
brier_class(preds_336, truth = label, prob_beta)

(brier_class(preds_0, truth = label, prob_beta)$.estimate +
  brier_class(preds_336, truth = label, prob_beta)$.estimate)/2
```


Relative improvement of beta calibration compared to raw
```{r}
(brier_class(preds_0, truth = label, prob_raw)$.estimate - 
  brier_class(preds_0, truth = label, prob_beta)$.estimate) / 
  brier_class(preds_0, truth = label, prob_raw)$.estimate

(brier_class(preds_336, truth = label, prob_raw)$.estimate - 
  brier_class(preds_336, truth = label, prob_beta)$.estimate) / 
  brier_class(preds_336, truth = label, prob_raw)$.estimate
```

